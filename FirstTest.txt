int : 부호가 있는 정수형(4byte)
long : 부호가 있는 정수형(8byte)
uint : 부호가 없는 정수형(4byte)
ulong : 부호가 없는 정수형(8byte)
short : 부호가 있는 정수형(2byte)
ushort : 부호가 있는 정수형(2byte)

2의 보수 : 모든 비트 반전 후 +1

char : 문자형(2byte) - ASCII 코드표에 따름
float : 실수형(4byte) 
double : 실수형(8byte)
bool : 논리형(1byte)(0이면 거짓, 0이 아니면 참)

어떤 자료형을 더 큰 동일 형태의 자료형으로 읽는 것은 가능(자료형의 승격), 이때 암시적 형변환이 일어남.
더 작은 크기의 자료형으로 읽는 것은 명시하지 않으면 불가능(자료 손실이 일어나기 때문)

철학적인 의미의 객체 : 어떤 사물이나 사념
소프트웨어 세상에서의 객체 : 어떤 사물이나 사념을 만들기 위해 확보한 특정 메모리 공간

초기화 : 확보한 메모리 공간에 값을 처음 써 넣는 과정
인스턴스 : 초기화가 된 객체

객체 선정
-> 추상화
-> 클래스화 
클래스 : 어떤 객체를 만들려면 어떤 종류의 또 얼마만큼의 메모리를 할당해야 하는지와, 어떤 기능이 있는지에 대한 정의
클래스는 멤버들을 가짐. 어떤 변수가 필요하다고 정의하면 해당 변수를 멤버로 가지게 된다.
> 객체화

사용자 정의 자료형 : 개발자가 직접 얼마만큼의 메모리를 어떻게 할당해야 하는지 정의할 수 있는 자료형
